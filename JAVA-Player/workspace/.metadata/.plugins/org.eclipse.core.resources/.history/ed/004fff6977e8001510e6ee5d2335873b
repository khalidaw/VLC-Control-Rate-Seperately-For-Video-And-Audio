import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;

public class maskEditor {

	private JFrame frame;
	private JTextField pathField;
	OutputStream out; 
	InputStream input; 

	Process proc;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					maskEditor window = new maskEditor();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 * @throws IOException 
	 */
	public maskEditor() throws IOException {

		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 * @throws IOException 
	 */
	private void initialize() throws IOException {
		final int margenBetweenButtons = 17;
		syncPoints pointsDB = new syncPoints();
		frame = new JFrame();
		frame.getContentPane().setBackground(Color.WHITE);
		frame.setBounds(100, 100, 450, 300);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
				
		ImageIcon buttonIcon;
		int currentX = 0;
		int currentY = 0;
		
		// begin button
		buttonIcon = getIcons.getBegginningButton();
		
		JButton btnBeginButton = new JButton(buttonIcon);
		btnBeginButton.setBorder(BorderFactory.createEmptyBorder());
		btnBeginButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
			}
		});
		btnBeginButton.setBounds(currentX, 0, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(btnBeginButton);
		
		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;
		currentY += buttonIcon.getIconWidth()+margenBetweenButtons;

		// rewind button
		buttonIcon = getIcons.getFastRewindButton();
		
		JButton btnRewindButton = new JButton(buttonIcon);
		btnRewindButton.setBorder(BorderFactory.createEmptyBorder());
		btnRewindButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
			}
		});
		btnRewindButton.setBounds(currentX, 0, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(btnRewindButton);
		
		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;

		
		// play button
		buttonIcon = getIcons.getPlayButton();
		
		JButton btnPlayButton = new JButton(getIcons.getPlayButton());
		btnPlayButton.setBorder(BorderFactory.createEmptyBorder());
		btnPlayButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				try {
					out.write("play\n".getBytes());
					out.flush();
					getTime();
					
					
					Thread th = new Thread(){
						@Override
						public void run() {
							while (true) {
								try {
									Thread.sleep(4000);
								} catch (InterruptedException e) {
									// TODO Auto-generated catch block
									e.printStackTrace();
								}
								getTime();
							}
						}
					};
					th.start();
					
				}
				catch (Exception e1)
				{
					//@TODO
				}
			}
		});
		btnPlayButton.setBounds(currentX, 0, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(btnPlayButton);
		
		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;
		// pause button
		buttonIcon = getIcons.getPauseButton();
		
		JButton btnPauseButton = new JButton(buttonIcon);
		btnPauseButton.setBorder(BorderFactory.createEmptyBorder());
		btnPauseButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				try {
					out.write("pause\n".getBytes());
				} catch (IOException e2) {
					// TODO Auto-generated catch block
					e2.printStackTrace();
				}
				try {
					out.flush();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnPauseButton.setBounds(currentX, 0, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(btnPauseButton);
		
		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;

		// stop button
		buttonIcon = getIcons.getStopButton();
		
		JButton btnStopButton = new JButton(buttonIcon);
		btnStopButton.setBorder(BorderFactory.createEmptyBorder());
		btnStopButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				try {
					out.write("stop\n".getBytes());
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				try {
					out.flush();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}
		});
		btnStopButton.setBounds(currentX, 0, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(btnStopButton);
		
		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;

		// fast forward button
		buttonIcon = getIcons.getFastForwardButton();
		
		JButton fastForwardButton = new JButton(buttonIcon);
		fastForwardButton.setBorder(BorderFactory.createEmptyBorder());
		fastForwardButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				try {
					out.write("faster\n".getBytes());
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				try {
					out.flush();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}			}
		});
		fastForwardButton.setBounds(currentX, 0, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(fastForwardButton);
		
		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;

		// end button
		buttonIcon = getIcons.getEndButton();
		
		JButton endButton = new JButton(buttonIcon);
		endButton.setBorder(BorderFactory.createEmptyBorder());
		endButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
			}
		});
		endButton.setBounds(currentX, 0, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(endButton);
		
		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;
		
		// show points places
		DefaultListModel<String> listModel = new DefaultListModel<String>();

		AddPointsToListModel(listModel);
		JList<String> list = new JList<String>(listModel); //data has type Object[]
		list.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
		list.setLayoutOrientation(JList.HORIZONTAL_WRAP);
		list.setVisibleRowCount(-1);
//		...
		JScrollPane listScroller = new JScrollPane(list);
		

		listScroller.setBounds(0, currentY, currentX, listModel.getSize()*20+margenBetweenButtons);
		
		currentY += listModel.getSize()*20+margenBetweenButtons;

//		listScroller.setPreferredSize(new Dimension(250, 80));
		frame.getContentPane().add(listScroller);
		
		
		// add button
		buttonIcon = getIcons.getAddButton();
		
		JButton addButton = new JButton(buttonIcon);
		addButton.setBorder(BorderFactory.createEmptyBorder());
		addButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
			}
		});
		addButton.setBounds(currentX/2-buttonIcon.getIconWidth()-margenBetweenButtons, currentY, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(addButton);
		
//		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;
		

		// remove button
		buttonIcon = getIcons.getRemoveButton();
		
		JButton removeButton = new JButton(buttonIcon);
		removeButton.setBorder(BorderFactory.createEmptyBorder());
		removeButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
			}
		});
		removeButton.setBounds(currentX/2+margenBetweenButtons, currentY, buttonIcon.getIconWidth(), buttonIcon.getIconHeight());
		frame.getContentPane().add(removeButton);
		
		currentY += buttonIcon.getIconHeight()+margenBetweenButtons;
//		currentX += buttonIcon.getIconHeight()+margenBetweenButtons;
		
		
		// path browser
		this.pathField = new JTextField();
		pathField.setBounds(0, currentY, currentX-margenBetweenButtons-70, 20);
		JButton browse = new JButton("Browse");
		browse.setBounds(currentX-margenBetweenButtons-65, currentY, 70,20);
		
		browse.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				//Create a file chooser
				final JFileChooser fc = new JFileChooser();
				fc.showOpenDialog(frame);
				try {
				pathField.setText(fc.getSelectedFile().getAbsolutePath());
				String[] arguments = new String[] {"vlc", "-I rc"};
				proc = new ProcessBuilder(arguments).start();
				input = proc.getInputStream();
				out = proc.getOutputStream(); 				
				out.write(("enqueue "+fc.getSelectedFile().getAbsolutePath()+"\n").getBytes());
				out.flush();

				}
				catch(Exception eee)
				{
//					pathField.setText("");
				}


			}
		});
		
		frame.getContentPane().add(pathField);
		frame.getContentPane().add(browse);
		currentY += 40;
		
		// update frame

		frame.setBounds(100, 100, currentX-margenBetweenButtons+10, currentY+10);

	}
	
	private String getTime()
	{
		try {
			byte[] timeBytes = new byte[9999];
			
			input.read(timeBytes);
			out.write("get_time".getBytes());
			
			String time = new String(timeBytes);
			
			return time;
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
	
	private void AddPointsToListModel(DefaultListModel<String> listModel)
	{
		listModel.addElement("At second 12. video:1.5. audio: 1.3. sync type: Dont wait");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
		listModel.addElement("Jane Doe\nstart = 5");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
		listModel.addElement("Jane Doe\nstart = 5");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
		listModel.addElement("Jane Doe\nstart = 5");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
		listModel.addElement("Jane Doe\nstart = 5");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
		listModel.addElement("Jane Doe\nstart = 5");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
		listModel.addElement("Jane Doe\nstart = 5");
		listModel.addElement("John Smith");
		listModel.addElement("Kathy Green");
	}
	

}
